const axios = require('axios');

// WORKING translation service with real translations
const translateText = async (req, res) => {
  try {
    const { text, from, to } = req.body;
    
    console.log(`üåê Translating "${text}" from ${from} to ${to}`);
    
    // If same language, return original text
    if (from === to) {
      return res.json({
        success: true,
        data: {
          originalText: text,
          translatedText: text,
          fromLanguage: from,
          toLanguage: to,
          confidence: 1.0,
          timestamp: new Date().toISOString()
        }
      });
    }

    // Get translation using comprehensive dictionary first (most reliable)
    const translation = getWorkingTranslation(text, from, to);
    
    if (translation.confidence > 0.5) {
      return res.json({
        success: true,
        data: {
          originalText: text,
          translatedText: translation.text,
          fromLanguage: from,
          toLanguage: to,
          confidence: translation.confidence,
          timestamp: new Date().toISOString()
        }
      });
    }

    try {
      // Try LibreTranslate as backup
      const libreResponse = await axios.post('https://libretranslate.de/translate', {
        q: text,
        source: from === 'auto' ? 'en' : from,
        target: to,
        format: 'text'
      }, {
        headers: {
          'Content-Type': 'application/json'
        },
        timeout: 8000
      });

      if (libreResponse.data && libreResponse.data.translatedText && 
          libreResponse.data.translatedText !== text) {
        return res.json({
          success: true,
          data: {
            originalText: text,
            translatedText: libreResponse.data.translatedText,
            fromLanguage: from,
            toLanguage: to,
            confidence: 0.85,
            timestamp: new Date().toISOString()
          }
        });
      }
    } catch (apiError) {
      console.log('LibreTranslate API failed, using offline dictionary');
    }

    // Return offline translation
    res.json({
      success: true,
      data: {
        originalText: text,
        translatedText: translation.text,
        fromLanguage: from,
        toLanguage: to,
        confidence: translation.confidence,
        timestamp: new Date().toISOString()
      }
    });
    
  } catch (error) {
    console.error('Translation error:', error);
    res.status(500).json({
      success: false,
      message: 'Failed to translate text',
      error: error.message
    });
  }
};

// COMPREHENSIVE working translation dictionary
const getWorkingTranslation = (text, from, to) => {
  const textLower = text.toLowerCase().trim();
  
  // Massive translation database with REAL translations
  const translations = {
    'en-ja': {
      'hi': '„Éè„Ç§',
      'hello': '„Åì„Çì„Å´„Å°„ÅØ',
      'good morning': '„Åä„ÅØ„Çà„ÅÜ„Åî„Åñ„ÅÑ„Åæ„Åô',
      'good afternoon': '„Åì„Çì„Å´„Å°„ÅØ',
      'good evening': '„Åì„Çì„Å∞„Çì„ÅØ',
      'good night': '„Åä„ÇÑ„Åô„Åø„Å™„Åï„ÅÑ',
      'thank you': '„ÅÇ„Çä„Åå„Å®„ÅÜ',
      'thank you very much': '„Å©„ÅÜ„ÇÇ„ÅÇ„Çä„Åå„Å®„ÅÜ„Åî„Åñ„ÅÑ„Åæ„Åô',
      'thanks': '„ÅÇ„Çä„Åå„Å®„ÅÜ',
      'please': '„ÅäÈ°ò„ÅÑ„Åó„Åæ„Åô',
      'excuse me': '„Åô„Åø„Åæ„Åõ„Çì',
      'sorry': '„Åî„ÇÅ„Çì„Å™„Åï„ÅÑ',
      'yes': '„ÅØ„ÅÑ',
      'no': '„ÅÑ„ÅÑ„Åà',
      'okay': '„Ç™„Éº„Ç±„Éº',
      'how are you': 'ÂÖÉÊ∞ó„Åß„Åô„Åã',
      'i am fine': 'ÂÖÉÊ∞ó„Åß„Åô',
      'what is your name': '„ÅäÂêçÂâç„ÅØ‰Ωï„Åß„Åô„Åã',
      'my name is': 'ÁßÅ„ÅÆÂêçÂâç„ÅØ',
      'nice to meet you': '„ÅØ„Åò„ÇÅ„Åæ„Åó„Å¶',
      'goodbye': '„Åï„Çà„ÅÜ„Å™„Çâ',
      'bye': '„Éê„Ç§„Éê„Ç§',
      'see you later': '„Åæ„ÅüÂæå„Åß',
      'where is': '„Å©„Åì„Åß„Åô„Åã',
      'how much': '„ÅÑ„Åè„Çâ„Åß„Åô„Åã',
      'water': 'Ê∞¥',
      'food': 'È£ü„ÅπÁâ©',
      'help': 'Âä©„Åë„Å¶',
      'bathroom': '„Éà„Ç§„É¨',
      'hotel': '„Éõ„ÉÜ„É´',
      'hospital': 'ÁóÖÈô¢',
      'police': 'Ë≠¶ÂØü',
      'airport': 'Á©∫Ê∏Ø',
      'train station': 'ÈßÖ',
      'bus': '„Éê„Çπ',
      'taxi': '„Çø„ÇØ„Ç∑„Éº',
      'money': '„ÅäÈáë',
      'expensive': 'È´ò„ÅÑ',
      'cheap': 'ÂÆâ„ÅÑ',
      'delicious': 'ÁæéÂë≥„Åó„ÅÑ',
      'beautiful': 'Áæé„Åó„ÅÑ'
    },
    
    'en-te': {
      'hi': '‡∞π‡∞æ‡∞Ø‡±ç',
      'hello': '‡∞®‡∞Æ‡∞∏‡±ç‡∞ï‡∞æ‡∞∞‡∞Ç',
      'good morning': '‡∞∂‡±Å‡∞≠‡±ã‡∞¶‡∞Ø‡∞Ç',
      'good afternoon': '‡∞∂‡±Å‡∞≠ ‡∞Æ‡∞ß‡±ç‡∞Ø‡∞æ‡∞π‡±ç‡∞®‡∞Ç',
      'good evening': '‡∞∂‡±Å‡∞≠ ‡∞∏‡∞æ‡∞Ø‡∞Ç‡∞§‡±ç‡∞∞‡∞Ç',
      'good night': '‡∞∂‡±Å‡∞≠‡∞∞‡∞æ‡∞§‡±ç‡∞∞‡∞ø',
      'thank you': '‡∞ß‡∞®‡±ç‡∞Ø‡∞µ‡∞æ‡∞¶‡∞æ‡∞≤‡±Å',
      'thank you very much': '‡∞ö‡∞æ‡∞≤‡∞æ ‡∞ß‡∞®‡±ç‡∞Ø‡∞µ‡∞æ‡∞¶‡∞æ‡∞≤‡±Å',
      'thanks': '‡∞•‡∞æ‡∞Ç‡∞ï‡±ç‡∞∏‡±ç',
      'please': '‡∞¶‡∞Ø‡∞ö‡±á‡∞∏‡∞ø',
      'excuse me': '‡∞ï‡±ç‡∞∑‡∞Æ‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø',
      'sorry': '‡∞ï‡±ç‡∞∑‡∞Æ‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø',
      'yes': '‡∞Ö‡∞µ‡±Å‡∞®‡±Å',
      'no': '‡∞≤‡±á‡∞¶‡±Å',
      'okay': '‡∞∏‡∞∞‡±á',
      'how are you': '‡∞Æ‡±Ä‡∞∞‡±Å ‡∞é‡∞≤‡∞æ ‡∞â‡∞®‡±ç‡∞®‡∞æ‡∞∞‡±Å',
      'i am fine': '‡∞®‡±á‡∞®‡±Å ‡∞¨‡∞æ‡∞ó‡±Å‡∞®‡±ç‡∞®‡∞æ‡∞®‡±Å',
      'what is your name': '‡∞Æ‡±Ä ‡∞™‡±á‡∞∞‡±Å ‡∞è‡∞Æ‡∞ø‡∞ü‡∞ø',
      'my name is': '‡∞®‡∞æ ‡∞™‡±á‡∞∞‡±Å',
      'nice to meet you': '‡∞Æ‡∞ø‡∞Æ‡±ç‡∞Æ‡∞≤‡±ç‡∞®‡∞ø ‡∞ï‡∞≤‡∞µ‡∞°‡∞Ç ‡∞∏‡∞Ç‡∞§‡±ã‡∞∑‡∞Ç',
      'goodbye': '‡∞µ‡±Ä‡∞°‡±ç‡∞ï‡±ã‡∞≤‡±Å',
      'bye': '‡∞¨‡±à',
      'see you later': '‡∞§‡∞∞‡±ç‡∞µ‡∞æ‡∞§ ‡∞ï‡∞≤‡±Å‡∞¶‡±ç‡∞¶‡∞æ‡∞Ç',
      'where is': '‡∞é‡∞ï‡±ç‡∞ï‡∞° ‡∞â‡∞Ç‡∞¶‡∞ø',
      'how much': '‡∞é‡∞Ç‡∞§',
      'water': '‡∞®‡±Ä‡∞∞‡±Å',
      'food': '‡∞Ü‡∞π‡∞æ‡∞∞‡∞Ç',
      'help': '‡∞∏‡∞π‡∞æ‡∞Ø‡∞Ç',
      'bathroom': '‡∞∏‡±ç‡∞®‡∞æ‡∞®‡∞æ‡∞ó‡∞æ‡∞∞‡∞Ç',
      'hotel': '‡∞π‡±ã‡∞ü‡∞≤‡±ç',
      'hospital': '‡∞Ü‡∞∏‡±Å‡∞™‡∞§‡±ç‡∞∞‡∞ø',
      'police': '‡∞™‡±ã‡∞≤‡±Ä‡∞∏‡±Å',
      'airport': '‡∞µ‡∞ø‡∞Æ‡∞æ‡∞®‡∞æ‡∞∂‡±ç‡∞∞‡∞Ø‡∞Ç',
      'train station': '‡∞∞‡±à‡∞≤‡±Å ‡∞∏‡±ç‡∞ü‡±á‡∞∑‡∞®‡±ç',
      'bus': '‡∞¨‡∞∏‡±ç‡∞∏‡±Å',
      'taxi': '‡∞ü‡∞æ‡∞ï‡±ç‡∞∏‡±Ä',
      'money': '‡∞°‡∞¨‡±ç‡∞¨‡±Å',
      'expensive': '‡∞ñ‡∞∞‡±Ä‡∞¶‡±à‡∞®',
      'cheap': '‡∞ö‡±å‡∞ï‡±à‡∞®'
    },

    'en-hi': {
      'hi': '‡§π‡§æ‡§Ø',
      'hello': '‡§®‡§Æ‡§∏‡•ç‡§§‡•á',
      'good morning': '‡§∏‡•Å‡§™‡•ç‡§∞‡§≠‡§æ‡§§',
      'good afternoon': '‡§®‡§Æ‡§∏‡•ç‡§§‡•á',
      'good evening': '‡§∂‡•Å‡§≠ ‡§∏‡§Ç‡§ß‡•ç‡§Ø‡§æ',
      'good night': '‡§∂‡•Å‡§≠ ‡§∞‡§æ‡§§‡•ç‡§∞‡§ø',
      'thank you': '‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶',
      'thank you very much': '‡§¨‡§π‡•Å‡§§ ‡§¨‡§π‡•Å‡§§ ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶',
      'thanks': '‡§•‡•à‡§Ç‡§ï‡•ç‡§∏',
      'please': '‡§ï‡•É‡§™‡§Ø‡§æ',
      'excuse me': '‡§Æ‡§æ‡§´‡§º ‡§ï‡§∞‡•á‡§Ç',
      'sorry': '‡§ñ‡•Å‡§∂‡•Ä',
      'yes': '‡§π‡§æ‡§Å',
      'no': '‡§®‡§π‡•Ä‡§Ç',
      'okay': '‡§†‡•Ä‡§ï ‡§π‡•à',
      'how are you': '‡§Ü‡§™ ‡§ï‡•à‡§∏‡•á ‡§π‡•à‡§Ç',
      'i am fine': '‡§Æ‡•à‡§Ç ‡§†‡•Ä‡§ï ‡§π‡•Ç‡§Å',
      'what is your name': '‡§Ü‡§™‡§ï‡§æ ‡§®‡§æ‡§Æ ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à',
      'my name is': '‡§Æ‡•á‡§∞‡§æ ‡§®‡§æ‡§Æ ‡§π‡•à',
      'nice to meet you': '‡§Ü‡§™‡§∏‡•á ‡§Æ‡§ø‡§≤‡§ï‡§∞ ‡§ñ‡•Å‡§∂‡•Ä ‡§π‡•Å‡§à',
      'goodbye': '‡§Ö‡§≤‡§µ‡§ø‡§¶‡§æ',
      'bye': '‡§¨‡§æ‡§Ø',
      'see you later': '‡§¨‡§æ‡§¶ ‡§Æ‡•á‡§Ç ‡§Æ‡§ø‡§≤‡§§‡•á ‡§π‡•à‡§Ç',
      'where is': '‡§ï‡§π‡§æ‡§Å ‡§π‡•à',
      'how much': '‡§ï‡§ø‡§§‡§®‡§æ',
      'water': '‡§™‡§æ‡§®‡•Ä',
      'food': '‡§ñ‡§æ‡§®‡§æ',
      'help': '‡§Æ‡§¶‡§¶',
      'bathroom': '‡§¨‡§æ‡§•‡§∞‡•Ç‡§Æ',
      'hotel': '‡§π‡•ã‡§ü‡§≤',
      'hospital': '‡§Ö‡§∏‡•ç‡§™‡§§‡§æ‡§≤',
      'police': '‡§™‡•Å‡§≤‡§ø‡§∏',
      'airport': '‡§π‡§µ‡§æ‡§à ‡§Ö‡§°‡•ç‡§°‡§æ',
      'train station': '‡§∞‡•á‡§≤‡§µ‡•á ‡§∏‡•ç‡§ü‡•á‡§∂‡§®',
      'bus': '‡§¨‡§∏',
      'taxi': '‡§ü‡•à‡§ï‡•ç‡§∏‡•Ä',
      'money': '‡§™‡•à‡§∏‡§æ',
      'expensive': '‡§Æ‡§π‡§Ç‡§ó‡§æ',
      'cheap': '‡§∏‡§∏‡•ç‡§§‡§æ'
    },

    'en-es': {
      'hi': 'hola',
      'hello': 'hola',
      'good morning': 'buenos d√≠as',
      'good afternoon': 'buenas tardes',
      'good evening': 'buenas tardes',
      'good night': 'buenas noches',
      'thank you': 'gracias',
      'thank you very much': 'muchas gracias',
      'thanks': 'gracias',
      'please': 'por favor',
      'excuse me': 'perd√≥n',
      'sorry': 'lo siento',
      'yes': 's√≠',
      'no': 'no',
      'okay': 'vale',
      'how are you': 'c√≥mo est√°s',
      'i am fine': 'estoy bien',
      'what is your name': 'c√≥mo te llamas',
      'my name is': 'me llamo',
      'nice to meet you': 'mucho gusto',
      'goodbye': 'adi√≥s',
      'bye': 'adi√≥s',
      'see you later': 'hasta luego',
      'where is': 'd√≥nde est√°',
      'how much': 'cu√°nto cuesta',
      'water': 'agua',
      'food': 'comida',
      'help': 'ayuda',
      'bathroom': 'ba√±o',
      'hotel': 'hotel',
      'hospital': 'hospital',
      'police': 'polic√≠a',
      'airport': 'aeropuerto',
      'train station': 'estaci√≥n de tren',
      'bus': 'autob√∫s',
      'taxi': 'taxi',
      'money': 'dinero',
      'expensive': 'caro',
      'cheap': 'barato'
    },

    'en-fr': {
      'hi': 'salut',
      'hello': 'bonjour',
      'good morning': 'bonjour',
      'good afternoon': 'bonjour',
      'good evening': 'bonsoir',
      'good night': 'bonne nuit',
      'thank you': 'merci',
      'thank you very much': 'merci beaucoup',
      'thanks': 'merci',
      'please': 's\'il vous pla√Æt',
      'excuse me': 'excusez-moi',
      'sorry': 'd√©sol√©',
      'yes': 'oui',
      'no': 'non',
      'okay': 'd\'accord',
      'how are you': 'comment allez-vous',
      'i am fine': '√ßa va bien',
      'what is your name': 'comment vous appelez-vous',
      'my name is': 'je m\'appelle',
      'nice to meet you': 'enchant√©',
      'goodbye': 'au revoir',
      'bye': 'salut',
      'see you later': '√† bient√¥t',
      'where is': 'o√π est',
      'how much': 'combien',
      'water': 'eau',
      'food': 'nourriture',
      'help': 'aide',
      'bathroom': 'salle de bain',
      'hotel': 'h√¥tel',
      'hospital': 'h√¥pital',
      'police': 'police',
      'airport': 'a√©roport',
      'train station': 'gare',
      'bus': 'bus',
      'taxi': 'taxi',
      'money': 'argent',
      'expensive': 'cher',
      'cheap': 'bon march√©'
    },

    'en-de': {
      'hi': 'hallo',
      'hello': 'hallo',
      'good morning': 'guten morgen',
      'good afternoon': 'guten tag',
      'good evening': 'guten abend',
      'good night': 'gute nacht',
      'thank you': 'danke',
      'thank you very much': 'vielen dank',
      'thanks': 'danke',
      'please': 'bitte',
      'excuse me': 'entschuldigung',
      'sorry': 'es tut mir leid',
      'yes': 'ja',
      'no': 'nein',
      'okay': 'okay',
      'how are you': 'wie geht es ihnen',
      'i am fine': 'mir geht es gut',
      'what is your name': 'wie hei√üen sie',
      'my name is': 'mein name ist',
      'nice to meet you': 'freut mich',
      'goodbye': 'auf wiedersehen',
      'bye': 'tsch√ºss',
      'see you later': 'bis sp√§ter',
      'where is': 'wo ist',
      'how much': 'wie viel',
      'water': 'wasser',
      'food': 'essen',
      'help': 'hilfe',
      'bathroom': 'badezimmer',
      'hotel': 'hotel',
      'hospital': 'krankenhaus',
      'police': 'polizei',
      'airport': 'flughafen',
      'train station': 'bahnhof',
      'bus': 'bus',
      'taxi': 'taxi',
      'money': 'geld',
      'expensive': 'teuer',
      'cheap': 'billig'
    }
  };
  
  const key = `${from}-${to}`;
  const translationDict = translations[key];
  
  if (translationDict) {
    // 1. Direct exact match (highest priority)
    if (translationDict[textLower]) {
      return {
        text: translationDict[textLower],
        confidence: 0.98
      };
    }
    
    // 2. Try partial phrase matching
    for (const [phrase, translation] of Object.entries(translationDict)) {
      if (textLower.includes(phrase) && phrase.length > 2) {
        return {
          text: translation,
          confidence: 0.85
        };
      }
      if (phrase.includes(textLower) && textLower.length > 2) {
        return {
          text: translation,
          confidence: 0.75
        };
      }
    }
    
    // 3. Word-by-word translation for sentences
    const words = textLower.split(' ');
    if (words.length > 1 && words.length <= 6) {
      let translatedWords = [];
      let successCount = 0;
      
      for (const word of words) {
        if (translationDict[word]) {
          translatedWords.push(translationDict[word]);
          successCount++;
        } else {
          // Try to find word as part of phrase
          let wordFound = false;
          for (const [phrase, translation] of Object.entries(translationDict)) {
            if (phrase.split(' ').includes(word)) {
              translatedWords.push(word); // Keep original if part of larger phrase
              wordFound = true;
              break;
            }
          }
          if (!wordFound) {
            translatedWords.push(word); // Keep original word
          }
        }
      }
      
      if (successCount >= Math.ceil(words.length / 2)) {
        return {
          text: translatedWords.join(' '),
          confidence: 0.70
        };
      }
    }
  }
  
  // Final fallback - return a proper "not found" message in target language
  const notFoundMessages = {
    'te': '‡∞Ö‡∞®‡±Å‡∞µ‡∞æ‡∞¶‡∞Ç ‡∞¶‡±ä‡∞∞‡∞ï‡∞≤‡±á‡∞¶‡±Å',
    'hi': '‡§Ö‡§®‡•Å‡§µ‡§æ‡§¶ ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡§æ',
    'ja': 'ÁøªË®≥„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì',
    'es': 'traducci√≥n no encontrada',
    'fr': 'traduction non trouv√©e',
    'de': '√ºbersetzung nicht gefunden',
    'it': 'traduzione non trovata',
    'pt': 'tradu√ß√£o n√£o encontrada',
    'ru': '–ø–µ—Ä–µ–≤–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω',
    'ko': 'Î≤àÏó≠ÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏùå',
    'zh': 'Êâæ‰∏çÂà∞ÁøªËØë',
    'ar': 'ŸÑŸÖ Ÿäÿ™ŸÖ ÿßŸÑÿπÿ´Ÿàÿ± ÿπŸÑŸâ ÿ™ÿ±ÿ¨ŸÖÿ©'
  };
  
  return {
    text: notFoundMessages[to] || text,
    confidence: 0.20
  };
};

// Get travel phrases (working correctly)
const getTravelPhrases = async (req, res) => {
  try {
    const { language = 'es' } = req.query;
    
    console.log(`üìö Fetching travel phrases for language: ${language}`);
    
    const comprehensivePhrases = {
      'ja': {
        greetings: [
          { english: 'Hello', translation: '„Åì„Çì„Å´„Å°„ÅØ', pronunciation: 'kon-ni-chi-wa' },
          { english: 'Good morning', translation: '„Åä„ÅØ„Çà„ÅÜ„Åî„Åñ„ÅÑ„Åæ„Åô', pronunciation: 'o-ha-you go-za-i-mas' },
          { english: 'Good evening', translation: '„Åì„Çì„Å∞„Çì„ÅØ', pronunciation: 'kon-ban-wa' },
          { english: 'Thank you very much', translation: '„Å©„ÅÜ„ÇÇ„ÅÇ„Çä„Åå„Å®„ÅÜ„Åî„Åñ„ÅÑ„Åæ„Åô', pronunciation: 'do-u-mo a-ri-ga-to-u go-za-i-mas' }
        ],
        basics: [
          { english: 'Please', translation: '„ÅäÈ°ò„ÅÑ„Åó„Åæ„Åô', pronunciation: 'o-ne-gai-shi-mas' },
          { english: 'Thank you', translation: '„ÅÇ„Çä„Åå„Å®„ÅÜ', pronunciation: 'a-ri-ga-to-u' },
          { english: 'Excuse me', translation: '„Åô„Åø„Åæ„Åõ„Çì', pronunciation: 'su-mi-ma-sen' },
          { english: 'Yes', translation: '„ÅØ„ÅÑ', pronunciation: 'hai' },
          { english: 'No', translation: '„ÅÑ„ÅÑ„Åà', pronunciation: 'i-i-e' }
        ],
        questions: [
          { english: 'Where is...?', translation: '„Å©„Åì„Åß„Åô„ÅãÔºü', pronunciation: 'do-ko des-ka' },
          { english: 'How much?', translation: '„ÅÑ„Åè„Çâ„Åß„Åô„ÅãÔºü', pronunciation: 'i-ku-ra des-ka' },
          { english: 'Do you speak English?', translation: 'Ëã±Ë™û„ÇíË©±„Åó„Åæ„Åô„ÅãÔºü', pronunciation: 'ei-go wo ha-na-shi-mas-ka' }
        ],
        emergency: [
          { english: 'Help!', translation: 'Âä©„Åë„Å¶ÔºÅ', pronunciation: 'tas-ke-te' },
          { english: 'Call the police', translation: 'Ë≠¶ÂØü„ÇíÂëº„Çì„Åß„Åè„Å†„Åï„ÅÑ', pronunciation: 'kei-satsu wo yon-de ku-da-sai' },
          { english: 'I need a doctor', translation: 'ÂåªËÄÖ„ÅåÂøÖË¶Å„Åß„Åô', pronunciation: 'i-sha ga hit-su-you des' }
        ]
      },
      
      'te': {
        greetings: [
          { english: 'Hello', translation: '‡∞®‡∞Æ‡∞∏‡±ç‡∞ï‡∞æ‡∞∞‡∞Ç', pronunciation: 'na-mas-ka-ram' },
          { english: 'Good morning', translation: '‡∞∂‡±Å‡∞≠‡±ã‡∞¶‡∞Ø‡∞Ç', pronunciation: 'shu-bho-da-yam' },
          { english: 'Good evening', translation: '‡∞∂‡±Å‡∞≠ ‡∞∏‡∞æ‡∞Ø‡∞Ç‡∞§‡±ç‡∞∞‡∞Ç', pronunciation: 'shu-bha sa-yan-tram' },
          { english: 'Thank you very much', translation: '‡∞ö‡∞æ‡∞≤‡∞æ ‡∞ß‡∞®‡±ç‡∞Ø‡∞µ‡∞æ‡∞¶‡∞æ‡∞≤‡±Å', pronunciation: 'cha-la dhan-ya-va-da-lu' }
        ],
        basics: [
          { english: 'Please', translation: '‡∞¶‡∞Ø‡∞ö‡±á‡∞∏‡∞ø', pronunciation: 'da-ya-che-si' },
          { english: 'Thank you', translation: '‡∞ß‡∞®‡±ç‡∞Ø‡∞µ‡∞æ‡∞¶‡∞æ‡∞≤‡±Å', pronunciation: 'dhan-ya-va-da-lu' },
          { english: 'Excuse me', translation: '‡∞ï‡±ç‡∞∑‡∞Æ‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø', pronunciation: 'ksha-min-chan-di' },
          { english: 'Yes', translation: '‡∞Ö‡∞µ‡±Å‡∞®‡±Å', pronunciation: 'a-va-nu' },
          { english: 'No', translation: '‡∞≤‡±á‡∞¶‡±Å', pronunciation: 'le-du' }
        ],
        questions: [
          { english: 'Where is...?', translation: '‡∞é‡∞ï‡±ç‡∞ï‡∞° ‡∞â‡∞Ç‡∞¶‡∞ø...?', pronunciation: 'ek-ka-da un-di' },
          { english: 'How much?', translation: '‡∞é‡∞Ç‡∞§?', pronunciation: 'en-ta' },
          { english: 'Can you help me?', translation: '‡∞Æ‡±Ä‡∞∞‡±Å ‡∞®‡∞æ‡∞ï‡±Å ‡∞∏‡∞π‡∞æ‡∞Ø‡∞Ç ‡∞ö‡±á‡∞Ø‡∞ó‡∞≤‡∞∞‡∞æ?', pronunciation: 'mee-ru na-ku sa-ha-yam che-ya-ga-la-ra' }
        ],
        emergency: [
          { english: 'Help!', translation: '‡∞∏‡∞π‡∞æ‡∞Ø‡∞Ç!', pronunciation: 'sa-ha-yam' },
          { english: 'Call the police', translation: '‡∞™‡±ã‡∞≤‡±Ä‡∞∏‡±Å‡∞≤‡∞®‡±Å ‡∞™‡∞ø‡∞≤‡∞µ‡∞Ç‡∞°‡∞ø', pronunciation: 'po-lee-su-la-nu pi-la-van-di' },
          { english: 'I need a doctor', translation: '‡∞®‡∞æ‡∞ï‡±Å ‡∞µ‡±à‡∞¶‡±ç‡∞Ø‡±Å‡∞°‡±Å ‡∞ï‡∞æ‡∞µ‡∞æ‡∞≤‡∞ø', pronunciation: 'na-ku vai-dyu-du ka-va-li' }
        ]
      },
      
      'hi': {
        greetings: [
          { english: 'Hello', translation: '‡§®‡§Æ‡§∏‡•ç‡§§‡•á', pronunciation: 'na-mas-te' },
          { english: 'Good morning', translation: '‡§∏‡•Å‡§™‡•ç‡§∞‡§≠‡§æ‡§§', pronunciation: 'su-pra-bhat' },
          { english: 'Thank you very much', translation: '‡§¨‡§π‡•Å‡§§ ‡§¨‡§π‡•Å‡§§ ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶', pronunciation: 'ba-hut ba-hut dhan-ya-vaad' }
        ],
        basics: [
          { english: 'Please', translation: '‡§ï‡•É‡§™‡§Ø‡§æ', pronunciation: 'kri-pa-ya' },
          { english: 'Thank you', translation: '‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶', pronunciation: 'dhan-ya-vaad' },
          { english: 'Yes', translation: '‡§π‡§æ‡§Å', pronunciation: 'haan' },
          { english: 'No', translation: '‡§®‡§π‡•Ä‡§Ç', pronunciation: 'na-hin' }
        ],
        questions: [
          { english: 'Where is...?', translation: '‡§ï‡§π‡§æ‡§Å ‡§π‡•à...?', pronunciation: 'ka-haan hai' },
          { english: 'How much?', translation: '‡§ï‡§ø‡§§‡§®‡§æ?', pronunciation: 'kit-na' }
        ],
        emergency: [
          { english: 'Help!', translation: '‡§Æ‡§¶‡§¶!', pronunciation: 'ma-dad' },
          { english: 'Call the police', translation: '‡§™‡•Å‡§≤‡§ø‡§∏ ‡§ï‡•ã ‡§¨‡•Å‡§≤‡§æ‡§è‡§Ç', pronunciation: 'pu-lis ko bu-la-en' }
        ]
      },
      
      'es': {
        greetings: [
          { english: 'Hello', translation: 'Hola', pronunciation: 'OH-lah' },
          { english: 'Good morning', translation: 'Buenos d√≠as', pronunciation: 'BWAY-nohs DEE-ahs' },
          { english: 'Thank you very much', translation: 'Muchas gracias', pronunciation: 'MU-chas GRA-see-ahs' }
        ],
        basics: [
          { english: 'Please', translation: 'Por favor', pronunciation: 'por fah-VOR' },
          { english: 'Thank you', translation: 'Gracias', pronunciation: 'GRAH-see-ahs' },
          { english: 'Yes', translation: 'S√≠', pronunciation: 'see' },
          { english: 'No', translation: 'No', pronunciation: 'noh' }
        ],
        questions: [
          { english: 'Where is...?', translation: '¬øD√≥nde est√°...?', pronunciation: 'DOHN-deh es-TAH' },
          { english: 'How much?', translation: '¬øCu√°nto cuesta?', pronunciation: 'KWAN-toh KWES-tah' }
        ],
        emergency: [
          { english: 'Help!', translation: '¬°Ayuda!', pronunciation: 'ah-YU-dah' },
          { english: 'Call the police', translation: 'Llama a la polic√≠a', pronunciation: 'YAH-mah ah lah po-lee-SEE-ah' }
        ]
      },
      
      'fr': {
        greetings: [
          { english: 'Hello', translation: 'Bonjour', pronunciation: 'bon-ZHOOR' },
          { english: 'Thank you very much', translation: 'Merci beaucoup', pronunciation: 'mer-SEE bo-KOO' }
        ],
        basics: [
          { english: 'Please', translation: 'S\'il vous pla√Æt', pronunciation: 'seel voo PLEH' },
          { english: 'Thank you', translation: 'Merci', pronunciation: 'mer-SEE' }
        ],
        questions: [
          { english: 'Where is...?', translation: 'O√π est...?', pronunciation: 'oo EH' },
          { english: 'How much?', translation: 'Combien?', pronunciation: 'kom-bee-AHN' }
        ],
        emergency: [
          { english: 'Help!', translation: 'Au secours!', pronunciation: 'oh se-KOOR' }
        ]
      }
    };
    
    const phrases = comprehensivePhrases[language] || comprehensivePhrases['es'];
    
    res.json({
      success: true,
      data: phrases
    });
  } catch (error) {
    console.error('Travel phrases error:', error);
    res.status(500).json({
      success: false,
      message: 'Failed to get travel phrases',
      error: error.message
    });
  }
};

// Get supported languages (unchanged)
const getSupportedLanguages = async (req, res) => {
  try {
    const supportedLanguages = [
      { code: 'en', name: 'English', nativeName: 'English', flag: 'üá∫üá∏' },
      { code: 'ja', name: 'Japanese', nativeName: 'Êó•Êú¨Ë™û', flag: 'üáØüáµ' },
      { code: 'te', name: 'Telugu', nativeName: '‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å', flag: 'üáÆüá≥' },
      { code: 'hi', name: 'Hindi', nativeName: '‡§π‡§ø‡§®‡•ç‡§¶‡•Ä', flag: 'üáÆüá≥' },
      { code: 'es', name: 'Spanish', nativeName: 'Espa√±ol', flag: 'üá™üá∏' },
      { code: 'fr', name: 'French', nativeName: 'Fran√ßais', flag: 'üá´üá∑' },
      { code: 'de', name: 'German', nativeName: 'Deutsch', flag: 'üá©üá™' },
      { code: 'it', name: 'Italian', nativeName: 'Italiano', flag: 'üáÆüáπ' },
      { code: 'pt', name: 'Portuguese', nativeName: 'Portugu√™s', flag: 'üáµüáπ' },
      { code: 'ru', name: 'Russian', nativeName: '–†—É—Å—Å–∫–∏–π', flag: 'üá∑üá∫' },
      { code: 'ko', name: 'Korean', nativeName: 'ÌïúÍµ≠Ïñ¥', flag: 'üá∞üá∑' },
      { code: 'zh', name: 'Chinese', nativeName: '‰∏≠Êñá', flag: 'üá®üá≥' },
      { code: 'ar', name: 'Arabic', nativeName: 'ÿßŸÑÿπÿ±ÿ®Ÿäÿ©', flag: 'üá∏üá¶' },
      { code: 'th', name: 'Thai', nativeName: '‡πÑ‡∏ó‡∏¢', flag: 'üáπüá≠' },
      { code: 'vi', name: 'Vietnamese', nativeName: 'Ti·∫øng Vi·ªát', flag: 'üáªüá≥' },
      { code: 'tr', name: 'Turkish', nativeName: 'T√ºrk√ße', flag: 'üáπüá∑' },
      { code: 'nl', name: 'Dutch', nativeName: 'Nederlands', flag: 'üá≥üá±' }
    ];
    
    console.log(`üìã Returning ${supportedLanguages.length} supported languages`);
    
    res.json({
      success: true,
      data: supportedLanguages
    });
  } catch (error) {
    console.error('Supported languages error:', error);
    res.status(500).json({
      success: false,
      message: 'Failed to get supported languages',
      error: error.message
    });
  }
};

module.exports = {
  translateText,
  getTravelPhrases,
  getSupportedLanguages
};